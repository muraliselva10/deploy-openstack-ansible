- name: copy db create template
  template: src=keystonedb.sql.j2 dest=/tmp/keystonedb.sql

- name: create database
  shell : mysql -u root < /tmp/keystonedb.sql

- name: remove sql
  file: path=/tmp/keystonedb.sql state=absent

- name: disable keystone start after installation
  lineinfile: line="manual" dest=/etc/init/keystone.override state=present create=yes

- name: install required packages
  tags: packages
  package: name={{ item }} state=latest
  with_items:
    - keystone 
    - apache2
    - libapache2-mod-wsgi
    - memcached 
    - python-memcache

- name: start memcached
  tags: service
  service: name=memcached state=restarted enabled=yes

- name: install keystone configuration
  tags: config
  template: src=keystone.conf.j2 dest=/etc/keystone/keystone.conf
  when: not ansible_check_mode

- name: run keystone-db sync
  command: keystone-manage db_sync
  become: true
  become_user: keystone
  when: not ansible_check_mode

- name: install apache config
  tags: config
  copy: src=wsgi-keystone.conf dest=/etc/apache2/sites-available/wsgi-keystone.conf

- name: Enable the Identity service virtual hosts
  file: src=/etc/apache2/sites-available/wsgi-keystone.conf dest=/etc/apache2/sites-enabled/wsgi-keystone.conf state=link force=yes

- name: start apache
  tags: service
  service: name=apache2 state=restarted enabled=yes 

- name: list services
  command: "openstack --os-token={{ keystonetoken }} service list"
  register: kservice
  when: not ansible_check_mode

- name: create keystone service
  command: "openstack --os-token={{ keystonetoken }} service create --name keystone --description 'OpenStack Identity' identity"
  when: not ansible_check_mode and kservice.stdout.find("keystone") < 0

- name: list endpoints
  command: "openstack --os-token={{ keystonetoken }} endpoint list"
  register: elist
  when: not ansible_check_mode

- name: create endpoints
  command: "openstack --os-token={{ keystonetoken }} endpoint create --region RegionOne identity {{ item }} http://{{ ansible_hostname }}:5000/v2.0"
  with_items:
    - internal
    - public
    - admin
  when: not ansible_check_mode and elist.stdout.find("Region") < 0

- name: list projects
  command: "openstack --os-token={{ keystonetoken }} project list"
  register: plist
  when: not ansible_check_mode

- block:
  - command: "openstack --os-token={{ keystonetoken }} domain create --description 'Default Domain' default"
  - command: "openstack --os-token={{ keystonetoken }} project create --domain default --description 'Admin Project' admin"
  - command: "openstack --os-token={{ keystonetoken }} user create --domain default --password {{ admin_password }} admin"
  - command: "openstack --os-token={{ keystonetoken }} role create admin"
  - command: "openstack --os-token={{ keystonetoken }} role add --project admin --user admin admin"
  - command: "openstack project create --domain default --description 'Service Project' service"
  - command: "openstack project create --domain default --description 'Demo Project' demo"
  - command: "openstack user create --domain default --password {{ demo_password }} demo"
  - command: "openstack role create user"
  - command: "openstack role add --project demo --user demo user"
  when: not ansible_check_mode and plist.stdout.find("admin") < 0
